name: ECR Build/Push with CDK Deploy
on:
  workflow_call:
    inputs:
      environment:
        description: "CDK Environment to deploy to"
        type: string
        required: true
    secrets:
      AWS_ECR_ROLE:
        description: "Role for push/pull to ECR"
        required: true
      GH_WRITE_TOKEN:
        description: "Role for writing to own repo"
        required: true
      AWS_CDK_DEPLOY_ROLE:
        description: "Role for deploying CDK stacks"
        required: true
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  create-context-artifact:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/upload-artifact@v3
        with:
          name: context
          path: cdk.json
          retention-days: 1
  ecr-build-and-deploy: 
    needs: create-context-artifact
    uses: ./.github/workflows/__reusable-ecr-build-and-push.yaml
    permissions:
      id-token: write
      contents: read
    strategy:
      # Since these are all writing the same artifact, they need to be run one at a time to avoid overwriting each other
      max-parallel: 1
      matrix:
        include:
        - ecr-repo-name: test-cicd-lambda
          app-path: ./lambdas/hello-world
        - ecr-repo-name: test-cicd-lambda-2
          app-path: ./lambdas/hello-second
        - ecr-repo-name: test-cicd-lambda-3
          app-path: ./lambdas/hello-third
    with:
      environment: ${{ inputs.environment }}
      ecr-repo-name: ${{ matrix.ecr-repo-name }}
      app-path: ${{ matrix.app-path }}
    secrets:
      AWS_ECR_ROLE: ${{ secrets.AWS_ECR_ROLE }}
  call-cicd:
    needs: ecr-build-and-deploy
    uses: ./.github/workflows/__reusable-cdk-deploy.yaml
    # If the tag has been updated, it will have been committed in update-cdk-context, rerunning the job, so cancel this one
    if: ${{ needs.ecr-build-and-deploy.outputs.updated-tag == '' }}
    with:
      environment: ${{ inputs.environment }}
    secrets:
      AWS_CDK_DEPLOY_ROLE: ${{ secrets.AWS_CDK_DEPLOY_ROLE }}
      GH_WRITE_TOKEN: ${{ secrets.GH_WRITE_TOKEN }}
